/*!
* Script for generating bootstrap modal dialogs with knockout
*/
define("modal", ["knockout"], function (e) { function u(e) { if (typeof e === "undefined") throw new Error("An options argument is required."); if (typeof e.viewModel !== "object") throw new Error("options.viewModel is required."); var n = e.viewModel; var u = e.template || n.template; var a = e.context; if (!u) throw new Error("options.template or options.viewModel.template is required."); return t(u, n).pipe($).pipe(function (e) { var t = $.Deferred(); r(n, t, a); i(e); s(t, e); o(e); return t }) } var t = function (t, r) { var i = n(); var s = $.Deferred(); e.renderTemplate(t, r, { afterRender: function (e) { var t = e.filter(function (e) { return e.nodeType === 1 }); s.resolve(t[0]) } }, i, "replaceNode"); return s }; var n = function () { var e = document.createElement("div"); e.style.display = "none"; document.body.appendChild(e); return e }; var r = function (e, t, n) { e.modal = { close: function (e) { if (typeof e !== "undefined") { t.resolveWith(n, [e]) } else { t.rejectWith(n, []) } } } }; var i = function (e) { e.modal({ backdrop: "static", keyboard: false }) }; var s = function (e, t) { e.always(function () { t.modal("hide") }) }; var o = function (t) { t.on("hidden.bs.modal", function () { t.each(function (t, n) { e.cleanNode(n) }); t.remove() }) }; return { showModal: u } })